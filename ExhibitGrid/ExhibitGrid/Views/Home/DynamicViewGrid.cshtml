@model ExhibitGrid.ViewModel.v2.GridVm
@{
    ViewBag.Title = "DynamicViewGrid";
}
<script src="~/Scripts/GridV2/grid.v2.js"></script>
<script src="~/Scripts/GridV2/directives.v2.js"></script>
<script src="~/Scripts/GridV2/modelService.v2.js"></script>
<link href="~/Content/exhibitGrid.v2.min.css" rel="stylesheet" />
@*<script src="~/Scripts/inversify.js"></script>*@


<div ng-app="app.v2">
    <div ng-controller="gridController as gridCtrl">
        <ul class="grid-wrapper table">
            <li ng-repeat="row in gridCtrl.GridVm.DataRows track by row.RowCode" ng-controller="rowController as rowCtrl" class="row-wrapper">
                <div ng-switch="row.Class">
                    <div class="{{row.Class}}" ng-switch-when="header-row">
                        <div class="cell text-cell cell-2x">
                            {{row.Text }} <br />
                        </div>
                    </div>
                    <div ng-class="" class="row-inline {{row.Class}}" ng-switch-when="data-row">
                        @if (Model.DataRows.Any(r => r.CanCollapse))
                        {
                            <div class="cell-wrapper">
                                <div class="cell collapse-cell">
                                    <i class="fa fa-plus fa-lg" ng-show="row.CanCollapse"></i>
                                </div>
                            </div>
                        }
                        @if (Model.DataRows.Any(r => r.CanSelect))
                        {
                            <div class="cell-wrapper">
                                <div class="cell select-cell">
                                    <input type="checkbox" ng-show="row.CanSelect" ng-model="row.IsSelected">
                                </div>
                            </div>
                        }
                        @if (Model.DataRows.Any(r => r.CrudFunctionality != "none"))
                        {
                            <div class="cell-wrapper">
                                <div class="cell crud-cell">
                                    <div ng-switch="row.CrudFunctionality">
                                        <i class="fa fa-user-plus fa-lg" ng-switch-when="create" style="cursor:pointer" ng-click="rowCtrl.addRow()"></i>
                                        <i class="fa fa-trash fa-lg" ng-switch-when="delete" style="cursor:pointer" ng-click="rowCtrl.deleteRow()"></i>
                                    </div>
                                </div>
                            </div>
                        }
                        @foreach (var cell in Model.DataRows[0].Cells.OrderBy(c => c.Order))
                        {
                            var type = cell.GetType().ToString();
                            switch (type)
                            {
                                case "ExhibitGrid.ViewModel.v2.TextCellVm":
                                    <div class="cell-wrapper">
                                        @cell.ColCode
                                    </div>
                                    break;
                                case "ExhibitGrid.ViewModel.v2.DataCellVm":
                                    <div class="cell-wrapper">
                                        @cell.ColCode
                                    </div>
                                    break;
                                case "ExhibitGrid.ViewModel.v2.NarrativeCellVm":
                                    <div class="cell-wrapper">
                                        @cell.ColCode
                                    </div>
                                    break;
                                case "ExhibitGrid.ViewModel.v2.PostItCellVm":
                                    <div class="cell-wrapper">
                                        @cell.ColCode
                                    </div>
                                    break;
                            }
                        }
                    </div>
                </div>
            </li>
        </ul>
    </div>
</div>

<script>

    (function (gridModel) {

        gridModel.currentGrid = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));

        //console.log(gridModel.currentGrid);

    }(window.gridModel = window.gridModel || {} ));

</script>
