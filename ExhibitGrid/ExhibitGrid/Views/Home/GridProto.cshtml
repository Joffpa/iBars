@model ExhibitGrid.ViewModel.GridVm

<script src="~/Scripts/angular.min.js"></script>
<script src="~/Scripts/angular-route.min.js"></script>
<script src="~/Scripts/Grid/grid.js"></script>
<script src="~/Scripts/Grid/directives.js"></script>
<script src="~/Scripts/Grid/modelService.js"></script>
<script src="~/Scripts/Grid/calcService.js"></script>
<script src="~/Scripts/Grid/filters.js"></script>
<script src="~/Scripts/math.js"></script>
<link href="~/Content/gridTable.min.css" rel="stylesheet" />
<script src="~/Scripts/kendo/2016.1.112/kendo.all.min.js"></script>
<link href="~/Content/kendo/2016.1.112/kendo.common.min.css" rel="stylesheet" />
<link href="~/Content/kendo/2016.1.112/kendo.silver.min.css" rel="stylesheet" />
@{
    var headerLevels = Model.Columns.Select(ch => ch.Level).Distinct().OrderByDescending(i => i);
    var firstRow = true;
    var headerLevelZero = Model.Columns.Where(c => c.Level == 0).OrderBy(c => c.DisplayOrder);
    var numExtraCols = 0;
    var hasSelect = false;
    var hasCollapse = false;
    var hasAdd = false;
    var hasDelete = false;
    if (Model.DataRows.Any(r => r.CanSelect))
    {
        numExtraCols++;
        hasSelect = true;
    }
    if (Model.DataRows.Any(r => r.CanCollapse))
    {
        numExtraCols++;
        hasCollapse = true;
    }
    if (Model.DataRows.Any(r => r.CanAdd))
    {
        numExtraCols++;
        hasAdd = true;
    }
    if (Model.DataRows.Any(r => r.CanDelete))
    {
        numExtraCols++;
        hasDelete = true;
    }
}
<div ng-app="app">
    <div ng-controller="gridController as gridCtrl">
        <table class="table table-bordered exhibit-table" >
            <thead>
            @foreach (var level in headerLevels)
            {
                <tr>
                    @if (firstRow)
                    {
                        <th class="grid-name" colspan="@(numExtraCols + headerLevelZero.Count(h => !h.HasHeader && !h.IsHidden))" rowspan="@headerLevels.Count()">
                            @Model.DisplayText
                        </th>
                    }
                    @{
                        var thisLevel = level;
                    }
                    @foreach (var column in Model.Columns.Where(h => h.Level == thisLevel && h.HasHeader && !h.IsHidden).OrderBy(h => h.DisplayOrder))
                    {
                        <th scope="col" colspan="@(column.ColSpan)">
                            @Html.Raw(column.DisplayText)
                        </th>
                    }
                    @{ firstRow = false; }
                </tr>
            }
            </thead>
            <tbody>
                <tr ng-repeat="row in gridCtrl.GridVm.DataRows | filter:{IsHidden: false, IsCollapsed: false} | orderBy:'DisplayOrder' track by row.RowCode " ng-controller="rowController as rowCtrl" ng-class="::row.Class">
                    @if (hasSelect)
                    {
                        <td colspan="1" >
                            <input type="checkbox" ng-if="::row.CanSelect" ng-model="row.IsSelected">
                        </td>
                    }
                    @if (hasCollapse)
                    {
                        <td colspan="1" >
                            <i class="fa fa-plus fa-lg" ng-if="::row.CanCollapse" style="cursor: pointer" ng-click="rowCtrl.collapseChildren()"></i>
                        </td>
                    }
                    @if (hasAdd)
                    {
                        <td colspan="1" >
                            <i class="fa fa-user-plus fa-lg" ng-if="::row.CanAdd" style="cursor: pointer" ng-click="rowCtrl.addRow()"></i>
                        </td>
                    }
                    @if (hasDelete)
                    {
                        <td colspan="1">
                            <i class="fa fa-trash fa-lg" ng-if="::row.CanDelete" style="cursor: pointer" ng-click="rowCtrl.deleteRow()"></i>
                        </td>
                    }
                    @for (var i = 0; i < headerLevelZero.Count(); i++)
                    {
                        var col = headerLevelZero.ElementAt(i);
                        if (col.IsHidden)
                        {
                            continue;
                        }
                        if (col.ColCode == "RowText")
                        {
                            <th scope="row" colspan="{{::row.Cells[@i].ColSpan}}" >
                                <div text-cell cell-vm="row.Cells[@i]" class="@(col.Directive + "-th")">
                                </div>
                            </th>
                        }
                        else
                        {
                            <td colspan="{{::row.Cells[@i].ColSpan}}" ng-if="row.Cells[@i] && row.Cells[@i].ColSpan" headers="{{::row.Text}} {{::row.Cells[@i].ColumnHeader}}"  >
                                <div @(col.Directive + "-cell") cell-vm="row.Cells[@i]" class="@(col.Directive + "-td")">
                                </div>
                            </td>
                        }
                    }
                </tr>
            </tbody>
        </table>
    </div>
</div>


<script>

    (function (gridModel) {

        gridModel.grid = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
        gridModel.gridCode = '@Model.GridCode';

    }(window.gridModel = window.gridModel || {} ));

</script>
